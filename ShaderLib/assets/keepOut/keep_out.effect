// Effect Syntax Guide: https://github.com/cocos-creator/docs-3d/blob/master/zh/material-system/effect-syntax.md

CCEffect %{
  techniques:
  - name: opaque
    passes:
    - vert: legacy/main-functions/general-vs:vert
      frag: unit-fs:frag
      depthStencilState:
        depthTest: false
        depthWrite: false
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendSrcAlpha: one_minus_src_alpha
      properties:
        mainTexture:    { value: white }
        mainColor:      { value: [1, 1, 1, 1], editor: { type: color } }
    - vert: custom-vs:vert
      frag: custom-fs:frag
      depthStencilState:
        depthTest: true
        depthWrite: false
        depthFunc: greater
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendSrcAlpha: one_minus_src_alpha
      properties:
        alphaColor:      { value: [0, 1, 1, 1], editor: { type: color } }
}%

CCProgram custom-vs %{
  precision highp float;
  #include <legacy/input>
  #include <legacy/fog-vs>
  #include <builtin/uniforms/cc-global>
  #include <legacy/local-batch>

  vec4 vert () {
    vec4 position;
    CCVertInput(position);
    mat4 matWorld;
    CCGetWorldMatrix(matWorld);
    CC_TRANSFER_FOG(matWorld * position);
    return cc_matProj * (cc_matView * matWorld) * position;
  }
}%

CCProgram custom-fs %{
  precision highp float;
  #include <legacy/output>

  uniform Constant {
    vec4 alphaColor;
  };

  vec4 frag () {
    vec4 color = alphaColor;
    color.a = 0.5;
    return CCFragOutput(color);
  }
}%

CCProgram unit-fs %{
  precision highp float;
  #include <legacy/output>
  #include <legacy/fog-fs>

  in vec2 v_uv;
  in vec3 v_position;
  uniform sampler2D mainTexture;

  uniform Constant {
    vec4 mainColor;
  };

  vec4 frag () {
    vec4 col = mainColor * texture(mainTexture, v_uv);
    CC_APPLY_FOG(col);
    return CCFragOutput(col);
  }
}%